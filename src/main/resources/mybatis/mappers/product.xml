<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boot.dao.ProductDAO">
	
    <insert id="product_write">
	    insert into product(store_id, category_id, title, description, price, stock, status, picture, discount_start, discount_end, discount_percentage) values(#{store_id},#{category_id},#{title},#{description},#{price},#{stock},#{status},#{picture},#{discount_start},#{discount_end},COALESCE(#{discount_percentage},0))
    </insert>
    
    <select id="product_list" resultType="com.boot.dto.ProductDTO">
        select id, store_id, category_id, title, description, price, stock, status, picture, recommend, discount_start, discount_end, discount_percentage from product order by id desc
    </select>
    
    <select id="categorylist" resultType="com.boot.dto.CategoryDTO">
        select id, name from category;
    </select>
    
    <select id="getProductById" parameterType="int" resultType="com.boot.dto.ProductDTO">
    	SELECT * FROM product WHERE id = #{product_id}
	</select>
	
	<select id="findTopDiscountProductNearExpiration" resultType="com.boot.dto.ProductDTO">
	    <![CDATA[
		    SELECT *
		    FROM product
		    WHERE discount_end IS NOT NULL
		      AND discount_start <= NOW()
		      AND discount_end > NOW()
		      AND TIMESTAMPDIFF(HOUR, NOW(), discount_end) <= 24
		    ORDER BY discount_percentage DESC, discount_end ASC
		    LIMIT 1
		  ]]>
	</select>
	
	<select id="selectFlashSaleItems" resultType="com.boot.dto.ProductDTO">
      <![CDATA[
	    SELECT *
	    FROM product
	    WHERE discount_end IS NOT NULL
	      AND discount_start <= NOW()
	      AND discount_end > NOW()
	      AND TIMESTAMPDIFF(HOUR, NOW(), discount_end) <= 24
	    ORDER BY discount_end ASC
	  ]]>
	</select>
	
	<select id="select50percentSaleItems" resultType="com.boot.dto.ProductDTO">
	    <![CDATA[
		    SELECT *
			FROM product
			WHERE discount_end IS NOT NULL
			  AND discount_start <= NOW()
			  AND discount_end > NOW()
			  AND discount_percentage >= 50
			ORDER BY discount_end ASC
		  ]]>
	</select>
	
	<update id="product_modify" >
		update product set category_id=#{category_id}, title=#{title}, description=#{description}
		, price=#{price}, stock=#{stock}, status=#{status}, picture=#{picture}
		, discount_start=#{discount_start}, discount_end=#{discount_end}, discount_percentage=COALESCE(#{discount_percentage},0)
		 where id=#{id} 
	</update>

	<update id="product_delete" parameterType="int"> delete from product where id=#{product_id} </update>
	
	<select id="getAllProducts" resultType="com.boot.dto.ProductDTO"> SELECT * FROM product </select>
	<select id="getProductListTop10" resultType="com.boot.dto.ProductDTO"> SELECT * FROM product LIMIT 10 </select>
<!--	<insert id="insertOrder"> INSERT INTO orders (product_id,customer_id,friend_id,total_price,created_at,status,posted) VALUES (#{product_id},#{customer_id},NULL,#{total_price},NOW(),'pending',0) </insert>-->
<!--	25.05.09테이블 바꾸면서 준우님꺼에서 수정!	 -->
	<select id="getPriceByProductId" resultType="int"> SELECT price FROM product WHERE id = #{productId} </select>
	
	<update id="decreaseStock">
	    UPDATE product
	    SET stock = stock - #{quantity}
	    WHERE id = #{product_id}
	</update>
	
    <select id="getPopularProducts" resultType="com.boot.dto.ProductDTO">
	    SELECT * FROM product WHERE status != '숨김' ORDER BY recommend DESC LIMIT 8
    </select>
	
	<update id="addRecommend" parameterType="java.util.Map">
	    UPDATE product
	    SET recommend = recommend + #{recommendCount}
	    WHERE id = #{productId}
	</update>
	
	<!-- 전체 상품 리스트 페이징 / 25.05.12 권준우 -->
	<select id="getAllProductsSorted" resultType="com.boot.dto.ProductDTO">
		SELECT *
		FROM product
		<choose>
			<when test="sort == 'priceAsc'">
				ORDER BY price ASC
			</when>
			<when test="sort == 'priceDesc'">
				ORDER BY price DESC
			</when>
			<otherwise>
				ORDER BY recommend DESC
			</otherwise>
		</choose>
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
<!--	<select id="getAllProductsPaging" resultType="com.boot.dto.ProductDTO">-->
<!--		SELECT * FROM product-->
<!--		ORDER BY id DESC-->
<!--		LIMIT #{limit} OFFSET #{offset}-->
<!--	</select>-->
	
	<!-- 총 상품 개수 / 25.05.12 권준우 -->
	<select id="countAllProducts" resultType="int">
		SELECT COUNT(*) FROM product
	</select>

	
	<!-- 카테고리별 상품 리스트 페이징 / 25.05.12 권준우 -->
	<select id="getProductsByCategorySorted" resultType="com.boot.dto.ProductDTO">
		SELECT *
		FROM product
		WHERE category_id = #{categoryId}
		<choose>
			<when test="sort == 'priceAsc'">
				ORDER BY price ASC
			</when>
			<when test="sort == 'priceDesc'">
				ORDER BY price DESC
			</when>
			<otherwise>
				ORDER BY recommend DESC
			</otherwise>
		</choose>
		LIMIT #{limit} OFFSET #{offset}
	</select>

<!--	<select id="getProductsByCategoryPaging" resultType="com.boot.dto.ProductDTO">-->
<!--		SELECT *-->
<!--		FROM product-->
<!--		WHERE category_id = #{categoryId}-->
<!--		ORDER BY id DESC-->
<!--		LIMIT #{limit} OFFSET #{offset}-->
<!--	</select>-->
	
	<!-- 카테고리별 총 상품 개수 / 25.05.12 권준우 -->
	<select id="countProductsByCategory" resultType="int">
		SELECT COUNT(*)
		FROM product
		WHERE category_id = #{categoryId}
	</select>
	
<!--	20250512주연 메인단 최근추가상품 추가 -->
	<select id="getLatestProducts" resultType="com.boot.dto.ProductDTO">
	    select id, store_id, category_id, title, description, price, stock, status, picture, recommend, discount_start, discount_end, discount_percentage
	    from product
	    WHERE status != '숨김'
	    order by id desc
	    LIMIT 8
	</select>

	<select id="countProductsByAllCategories" resultType="map">
		SELECT category_id, COUNT(*) AS count
		FROM product
		GROUP BY category_id
	</select>
	
	<select id="getAllCategories" resultType="com.boot.dto.CategoryDTO">
		SELECT * FROM category ORDER BY id ASC
	</select>
	
	
	<!-- 카테고리별 키워드 검색 -->
	<select id="searchProductsByCategory" resultType="com.boot.dto.ProductDTO">
		SELECT *
		FROM product
		WHERE category_id = #{categoryId}
		  AND title LIKE CONCAT('%', #{keyword}, '%')
		<choose>
			<when test="sort == 'priceAsc'">
				ORDER BY price ASC
			</when>
			<when test="sort == 'priceDesc'">
				ORDER BY price DESC
			</when>
			<otherwise>
				ORDER BY recommend DESC
			</otherwise>
		</choose>
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="countSearchedProductsByCategory" resultType="int">
		SELECT COUNT(*)
		FROM product
		WHERE category_id = #{categoryId}
		  AND title LIKE CONCAT('%', #{keyword}, '%')
	</select>


	<!-- 전체 상품 키워드 검색 -->
	<select id="searchAllProducts" resultType="com.boot.dto.ProductDTO">
		SELECT *
		FROM product
		WHERE title LIKE CONCAT('%', #{keyword}, '%')
		<choose>
			<when test="sort == 'priceAsc'">
				ORDER BY price ASC
			</when>
			<when test="sort == 'priceDesc'">
				ORDER BY price DESC
			</when>
			<otherwise>
				ORDER BY recommend DESC
			</otherwise>
		</choose>
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
	<select id="countAllSearchedProducts" resultType="int">
		SELECT COUNT(*)
		FROM product
		WHERE title LIKE CONCAT('%', #{keyword}, '%')
	</select>
	
</mapper>